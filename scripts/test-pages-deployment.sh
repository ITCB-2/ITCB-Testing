#!/bin/bash

# Script to test report deployment locally
# This simulates the GitHub Pages deployment process

set -e

echo "üé≠ Testing Playwright Reports Deployment Structure"
echo "=================================================="

# Create temporary directory structure
TEMP_DIR="./temp-pages-test"
rm -rf "$TEMP_DIR"
mkdir -p "$TEMP_DIR/public"

echo "üìÅ Creating report structure..."

# Simulate reports directory (use existing if available)
if [ -d "./playwright-report" ]; then
    echo "‚úÖ Found existing playwright-report directory"
    mkdir -p "$TEMP_DIR/reports-temp"
    cp -r ./playwright-report/* "$TEMP_DIR/reports-temp/"
else
    echo "‚ö†Ô∏è  No existing reports found, creating mock report"
    mkdir -p "$TEMP_DIR/reports-temp"
    cat > "$TEMP_DIR/reports-temp/index.html" << 'EOF'
<!DOCTYPE html>
<html>
<head><title>Mock Playwright Report</title></head>
<body><h1>Mock Test Report</h1><p>This is a mock report for testing.</p></body>
</html>
EOF
fi

# Create main index.html (same as in the workflow)
echo "üìù Creating main index page..."
cat > "$TEMP_DIR/public/index.html" << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ITCB Testing - Playwright Reports</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
            max-width: 1200px; 
            margin: 0 auto; 
            padding: 2rem; 
            line-height: 1.6;
            background: #f8f9fa;
        }
        .header { 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            text-align: center;
        }
        .header h1 { margin: 0; font-size: 2.5rem; }
        .header p { margin: 0.5rem 0 0 0; opacity: 0.9; }
        .reports-grid { 
            display: grid; 
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); 
            gap: 1.5rem; 
        }
        .report-card { 
            background: white; 
            border-radius: 8px; 
            padding: 1.5rem; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .report-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        }
        .report-card h3 { 
            margin-top: 0; 
            color: #333;
            font-size: 1.3rem;
        }
        .report-card p { 
            color: #666; 
            margin-bottom: 1rem; 
        }
        .btn { 
            display: inline-block; 
            background: #667eea; 
            color: white; 
            padding: 0.75rem 1.5rem; 
            text-decoration: none; 
            border-radius: 5px; 
            transition: background 0.2s;
            font-weight: 500;
        }
        .btn:hover { 
            background: #5a6fd8; 
        }
        .footer {
            text-align: center;
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid #ddd;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üé≠ ITCB Testing Reports</h1>
        <p>Playwright End-to-End Test Results</p>
    </div>
    
    <div class="reports-grid">
        <div class="report-card">
            <h3>Latest Report</h3>
            <p>Most recent test execution results</p>
            <a href="./latest/" class="btn">View Report</a>
        </div>
    </div>
    
    <div class="footer">
        <p>Last updated: <span id="last-updated"></span></p>
        <p>Generated by GitHub Actions ‚Ä¢ <a href="https://github.com/ITCB-2/ITCB-Testing">View Source</a></p>
    </div>

    <script>
        document.getElementById('last-updated').textContent = new Date().toLocaleString();
    </script>
</body>
</html>
EOF

# Copy reports to public directory structure
echo "üìã Setting up report directories..."
mkdir -p "$TEMP_DIR/public/latest"
cp -r "$TEMP_DIR/reports-temp/"* "$TEMP_DIR/public/latest/"

# Create timestamped archive
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
mkdir -p "$TEMP_DIR/public/archives/test-run"
cp -r "$TEMP_DIR/reports-temp/"* "$TEMP_DIR/public/archives/test-run/$TIMESTAMP/"

echo "‚úÖ Report structure created successfully!"
echo ""
echo "üìÇ Directory structure:"
echo "‚îú‚îÄ‚îÄ public/"
echo "‚îÇ   ‚îú‚îÄ‚îÄ index.html (main landing page)"
echo "‚îÇ   ‚îú‚îÄ‚îÄ latest/ (latest test reports)"
echo "‚îÇ   ‚îî‚îÄ‚îÄ archives/"
echo "‚îÇ       ‚îî‚îÄ‚îÄ test-run/"
echo "‚îÇ           ‚îî‚îÄ‚îÄ $TIMESTAMP/ (timestamped archive)"
echo ""
echo "üåê To test locally, you can:"
echo "1. cd $TEMP_DIR/public"
echo "2. python3 -m http.server 8000"
echo "3. Open http://localhost:8000 in your browser"
echo ""
echo "üßπ To clean up: rm -rf $TEMP_DIR"
