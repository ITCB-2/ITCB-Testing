name: Slack Notifications

on:
  # Triggered when deploy-reports workflow completes
  workflow_run:
    workflows: ['Deploy Playwright Reports to GitHub Pages']
    types:
      - completed

  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      status:
        description: 'Test notification status'
        required: true
        default: 'success'
        type: choice
        options:
          - success
          - failure

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get test and deployment status
        id: status
        run: |
          # Default values for manual trigger
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "deployment_status=${{ github.event.inputs.status }}" >> $GITHUB_OUTPUT
            echo "trigger=manual" >> $GITHUB_OUTPUT
            echo "test_status=skipped" >> $GITHUB_OUTPUT
            echo "workflow_name=Manual Test" >> $GITHUB_OUTPUT
          else
            # Get deployment status from deploy-reports workflow
            echo "deployment_status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
            echo "trigger=auto" >> $GITHUB_OUTPUT
            
            # Try to get the original test workflow info from the deploy-reports workflow
            # The deploy-reports workflow name contains info about which test workflow triggered it
            DEPLOY_WORKFLOW_ID="${{ github.event.workflow_run.id }}"
            
            # Use GitHub API to get the deploy-reports workflow run details
            DEPLOY_RUN_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/${DEPLOY_WORKFLOW_ID}")
            
            # Extract the triggering workflow info from the deploy run
            TRIGGERING_WORKFLOW_ID=$(echo "$DEPLOY_RUN_DATA" | jq -r '.triggering_workflow.id // empty')
            
            if [ -n "$TRIGGERING_WORKFLOW_ID" ] && [ "$TRIGGERING_WORKFLOW_ID" != "null" ]; then
              # Get the original test workflow run details
              TEST_RUN_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/${TRIGGERING_WORKFLOW_ID}")
              
              TEST_STATUS=$(echo "$TEST_RUN_DATA" | jq -r '.conclusion // "skipped"')
              WORKFLOW_NAME=$(echo "$TEST_RUN_DATA" | jq -r '.name // "Manual Test"')
              
              echo "test_status=${TEST_STATUS}" >> $GITHUB_OUTPUT
              echo "workflow_name=${WORKFLOW_NAME}" >> $GITHUB_OUTPUT
            else
              echo "test_status=skipped" >> $GITHUB_OUTPUT
              echo "workflow_name=Manual Test" >> $GITHUB_OUTPUT
            fi
          fi

          # Get current date/time in Israel timezone
          ISRAEL_TIME=$(TZ='Asia/Jerusalem' date '+%d-%m-%Y %H:%M:%S')
          echo "israel_time=$ISRAEL_TIME" >> $GITHUB_OUTPUT

      - name: Notify Slack on Success
        if: steps.status.outputs.deployment_status == 'success'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {
              "channel": "#testing-updates",
              "text": "📊 Test Reports Updated!",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "📊 Test Reports Updated!"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Hey team! 👋 Our automated Playwright test reports are now live:\n\n🧪 *Test Workflow:* ${{ steps.status.outputs.workflow_name }}\n📋 *Test Status:* ${{ steps.status.outputs.test_status == 'success' && '✅ PASSED' || steps.status.outputs.test_status == 'failure' && '❌ FAILED' || '⏭️ SKIPPED' }}\n\n🏠 *Latest Report:* https://itcb-2.github.io/ITCB-Testing/\n\n${{ steps.status.outputs.test_status == 'success' && '🎉 All tests passed! Great work!' || steps.status.outputs.test_status == 'failure' && '⚠️ Some tests failed. Please check the report for details.' || '📊 Check the report for test results.' }}\n\nRepository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nDeployed at: ${{ steps.status.outputs.israel_time }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: steps.status.outputs.deployment_status == 'failure'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {
              "channel": "#testing-updates",
              "text": "❌ Test Report Deployment Failed",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "❌ Test Report Deployment Failed"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "There was an issue deploying the latest test reports to GitHub Pages.\n\n🧪 *Original Test Workflow:* ${{ steps.status.outputs.workflow_name }}\n📋 *Test Status:* ${{ steps.status.outputs.test_status == 'success' && '✅ Tests passed but deployment failed' || steps.status.outputs.test_status == 'failure' && '❌ Tests failed and deployment failed' || '⏭️ Tests were skipped but deployment failed' }}\n\nRepository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\n\n🔧 Action Required: Please check the deployment workflow logs\n📋 Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\nThe team may need to check the previous reports at:\n🔗 https://netanelh2.github.io/Playwright-TypeScript-Init/"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Add notification status to summary
        run: |
          echo "## 📱 Slack Notification Sent!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Deployment Status:** ${{ steps.status.outputs.deployment_status }}" >> $GITHUB_STEP_SUMMARY
          echo "🧪 **Test Status:** ${{ steps.status.outputs.test_status }}" >> $GITHUB_STEP_SUMMARY
          echo "🔄 **Workflow:** ${{ steps.status.outputs.workflow_name }}" >> $GITHUB_STEP_SUMMARY
          echo "🔔 **Trigger:** ${{ steps.status.outputs.trigger }}" >> $GITHUB_STEP_SUMMARY
          echo "⏰ **Sent at:** $(date)" >> $GITHUB_STEP_SUMMARY
