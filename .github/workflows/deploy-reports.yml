name: Deploy Playwright Reports to GitHub Pages

on:
  # Triggered by other workflows completing
  workflow_run:
    workflows: ['Sanity Tests', 'Nightly Regression Tests']
    types:
      - completed

  # Manual trigger for deployment
  workflow_dispatch:
    inputs:
      source_workflow:
        description: 'Source workflow to deploy reports from'
        required: true
        default: 'sanity-tests'
        type: choice
        options:
          - sanity-tests
          - nightly-regression-tests

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' || 
      github.event.workflow_run.conclusion == 'failure' ||
      github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download artifacts from workflow run
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.workflow_run.name == 'Sanity Tests' && 'sanity-playwright-report' || github.event.workflow_run.name == 'Nightly Regression Tests' && 'nightly-regression-playwright-report' || 'playwright-report' }}
          path: ./reports-temp/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Download artifacts for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.source_workflow == 'sanity-tests' && 'sanity-playwright-report' || github.event.inputs.source_workflow == 'nightly-regression-tests' && 'nightly-regression-playwright-report' || 'playwright-report' }}
          path: ./reports-temp/

      - name: Create reports structure
        run: |
          mkdir -p ./public

          # Create index.html for the main page
          cat > ./public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>ITCB Testing - Playwright Reports</title>
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
                      max-width: 1200px; 
                      margin: 0 auto; 
                      padding: 2rem; 
                      line-height: 1.6;
                      background: #f8f9fa;
                  }
                  .header { 
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      padding: 2rem;
                      border-radius: 8px;
                      margin-bottom: 2rem;
                      text-align: center;
                  }
                  .header h1 { margin: 0; font-size: 2.5rem; }
                  .header p { margin: 0.5rem 0 0 0; opacity: 0.9; }
                  .reports-grid { 
                      display: grid; 
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); 
                      gap: 1.5rem; 
                  }
                  .report-card { 
                      background: white; 
                      border-radius: 8px; 
                      padding: 1.5rem; 
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      transition: transform 0.2s, box-shadow 0.2s;
                  }
                  .report-card:hover {
                      transform: translateY(-2px);
                      box-shadow: 0 4px 20px rgba(0,0,0,0.15);
                  }
                  .report-card h3 { 
                      margin-top: 0; 
                      color: #333;
                      font-size: 1.3rem;
                  }
                  .report-card p { 
                      color: #666; 
                      margin-bottom: 1rem; 
                  }
                  .btn { 
                      display: inline-block; 
                      background: #667eea; 
                      color: white; 
                      padding: 0.75rem 1.5rem; 
                      text-decoration: none; 
                      border-radius: 5px; 
                      transition: background 0.2s;
                      font-weight: 500;
                  }
                  .btn:hover { 
                      background: #5a6fd8; 
                  }
                  .status { 
                      display: inline-block; 
                      padding: 0.25rem 0.5rem; 
                      border-radius: 3px; 
                      font-size: 0.85rem; 
                      font-weight: 500;
                      margin-bottom: 1rem;
                  }
                  .status.success { background: #d4edda; color: #155724; }
                  .status.failure { background: #f8d7da; color: #721c24; }
                  .footer {
                      text-align: center;
                      margin-top: 3rem;
                      padding-top: 2rem;
                      border-top: 1px solid #ddd;
                      color: #666;
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>🎭 ITCB Testing Reports</h1>
                  <p>Playwright End-to-End Test Results</p>
              </div>
              
              <div class="reports-grid" id="reports-container">
                  <!-- Reports will be populated by JavaScript -->
              </div>
              
              <div class="footer">
                  <p>Last updated: <span id="last-updated"></span></p>
                  <p>Generated by GitHub Actions • <a href="https://github.com/ITCB-2/ITCB-Testing">View Source</a></p>
              </div>

              <script>
                  document.getElementById('last-updated').textContent = new Date().toLocaleString();
                  
                  // Check for available reports and populate the grid
                  const reports = [
                      {
                          name: 'Latest Report',
                          description: 'Most recent test execution results',
                          path: './latest/',
                          type: 'latest'
                      }
                  ];
                  
                  const container = document.getElementById('reports-container');
                  
                  reports.forEach(report => {
                      const card = document.createElement('div');
                      card.className = 'report-card';
                      card.innerHTML = \`
                          <h3>\${report.name}</h3>
                          <p>\${report.description}</p>
                          <a href="\${report.path}" class="btn">View Report</a>
                      \`;
                      container.appendChild(card);
                  });
              </script>
          </body>
          </html>
          EOF

      - name: Move reports to public directory
        run: |
          # Create latest directory and copy reports
          if [ -d "./reports-temp" ]; then
            mkdir -p ./public/latest
            cp -r ./reports-temp/* ./public/latest/
            
            # Create timestamped directory
            TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
            WORKFLOW_NAME="${{ github.event.workflow_run.name || github.event.inputs.source_workflow }}"
            WORKFLOW_NAME_CLEAN=$(echo "$WORKFLOW_NAME" | tr ' ' '-' | tr '[:upper:]' '[:lower:]')
            
            # Create the full archive path including timestamp directory
            mkdir -p "./public/archives/$WORKFLOW_NAME_CLEAN/$TIMESTAMP"
            cp -r ./reports-temp/* "./public/archives/$WORKFLOW_NAME_CLEAN/$TIMESTAMP/"
            
            echo "Reports copied to public directory"
            ls -la ./public/
          else
            echo "No reports found to deploy"
            # Create a placeholder if no reports exist
            mkdir -p ./public/latest
            echo "<h1>No reports available yet</h1>" > ./public/latest/index.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add deployment status to summary
        run: |
          echo "## 🎭 Playwright Reports Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Report URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Direct Links:**" >> $GITHUB_STEP_SUMMARY
          echo "- [Latest Report](${{ steps.deployment.outputs.page_url }}latest/)" >> $GITHUB_STEP_SUMMARY
          echo "- [All Reports](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⏰ **Deployed at:** $(date)" >> $GITHUB_STEP_SUMMARY
