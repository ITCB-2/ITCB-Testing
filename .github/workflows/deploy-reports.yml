name: Deploy Playwright Reports to GitHub Pages

on:
  # Triggered by other workflows completing
  workflow_run:
    workflows: ['Sanity Tests', 'Nightly Regression Tests']
    types:
      - completed

  # Manual trigger for deployment
  workflow_dispatch:
    inputs:
      source_workflow:
        description: 'Source workflow to deploy reports from'
        required: true
        default: 'sanity-tests'
        type: choice
        options:
          - sanity-tests
          - nightly-regression-tests

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' || 
      github.event.workflow_run.conclusion == 'failure' ||
      github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download artifacts from workflow run
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.workflow_run.name == 'Sanity Tests' && 'sanity-playwright-report' || github.event.workflow_run.name == 'Nightly Regression Tests' && 'nightly-regression-playwright-report' || 'playwright-report' }}
          path: ./reports-temp/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Download artifacts for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.source_workflow == 'sanity-tests' && 'sanity-playwright-report' || github.event.inputs.source_workflow == 'nightly-regression-tests' && 'nightly-regression-playwright-report' || 'playwright-report' }}
          path: ./reports-temp/

      - name: Deploy Playwright reports directly
        run: |
          # Simply copy the Playwright HTML reports to public directory
          if [ -d "./reports-temp" ]; then
            mkdir -p ./public
            cp -r ./reports-temp/* ./public/
            
            echo "Playwright reports copied to public directory"
            ls -la ./public/
          else
            echo "No reports found to deploy"
            # Create a placeholder if no reports exist
            mkdir -p ./public
            echo "<h1>No Playwright reports available yet</h1><p>Reports will appear here after test runs complete.</p>" > ./public/index.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add deployment status to summary
        run: |
          echo "## 🎭 Playwright Reports Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Report URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⏰ **Deployed at:** $(date)" >> $GITHUB_STEP_SUMMARY
